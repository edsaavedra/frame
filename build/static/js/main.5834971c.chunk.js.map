{"version":3,"sources":["components/AddTodo.js","actions/index.js","components/AddTodoContainer.js","components/TodoList.js","components/TodoListContainer.js","components/ImagesContainer.js","App.js","reducers/index.js","localStorage.js","api/index.js","saga/sagas.js","index.js"],"names":["AddTodo","input","onAddTodo","onSubmit","e","preventDefault","value","type","className","ref","node","fetchImagesAction","images","payload","connect","dispatch","text","id","Math","round","random","status","TodoList","todos","onFinishTodo","onDeleteTodo","map","todo","idx","key","onClick","bind","state","finishTodoAction","deleteTodoAction","ImagesContainer","getImages","length","this","props","image","_idx","src","urls","raw","alt","description","alt_description","href","links","download","Component","App","AddTodoContainer","TodoListContainer","combineReducers","action","index","findIndex","filter","getTodos","nextPage","localStorage","window","API_KEY","BASE_URL","a","page","URL","fetch","response","Error","errors","json","fetchImagesSaga","deleteTodoSaga","rootSaga","getPage","select","call","fetchImages","put","takeEvery","takeLatest","localStore","serializedState","getItem","JSON","parse","loadState","sagaMiddleware","createSagaMiddleware","store","createStore","rootStore","compose","applyMiddleware","composeWithDevTools","run","subscribe","throttle","stringify","setItem","saveState","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5834971c.chunk.js","sourcesContent":["import React from 'react';\n\nconst AddTodo = ({onAddTodo}) => {\n    let input;\n    return (\n        <form onSubmit={(e) => {\n            e.preventDefault();\n            const {value} = input;\n            if (!value) return;\n            onAddTodo(value);\n        }}>\n            <input type=\"text\" className=\"teal lighten-5\" ref={node => input = node}/>\n            <button type=\"submit\" className=\"btn\">Add</button>\n        </form>\n    );\n}\n\nexport default AddTodo;","export const ADD_TODO = \"ADD_TODO\";\nexport const FINISH_TODO = \"FINISH_TODO\";\nexport const FETCH_TODOS = \"FETCH_TODOS\";\nexport const FETCH_IMAGES = \"FETCH_IMAGES\";\nexport const IMAGES_SUCCESS = \"IMAGES_SUCCESS\";\nexport const DELETE_TODO = \"DELETE_TODO\";\nexport const DELETE_TODO_SAGA = \"DELETE_TODO_SAGA\";\n\nexport const addTodoAction = todo => ({\n    type: ADD_TODO,\n    payload: todo\n})\n\nexport const finishTodoAction = id => ({\n    type: FINISH_TODO,\n    payload: id\n})\n\nexport const fetchTodosAction = todos => ({\n    type: FETCH_TODOS,\n    payload: todos\n})\n\nexport const fetchImagesAction = images => ({\n    type: FETCH_IMAGES,\n    payload: images\n})\n\nexport const deleteTodoAction = id => ({\n    type: DELETE_TODO,\n    payload: id\n})\n\nexport const deleteTodoFromSaga = id => ({\n    type: DELETE_TODO_SAGA,\n    payload: id\n})\n","import { connect } from \"react-redux\";\nimport AddTodo from \"./AddTodo\";\nimport { addTodoAction } from \"../actions\";\n\nconst mapDispatchToProps = dispatch => ({\n    onAddTodo: text => {\n        return dispatch(addTodoAction({\n        id: Math.round(Math.random() * 100),\n        text,\n        status: true\n    }))}\n});\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(AddTodo);","import React from 'react';\n\nconst TodoList = ({ todos = [], onFinishTodo, onDeleteTodo }) => {\n    return (\n        <ul className=\"collection\">\n            {todos.map((todo, idx) => (\n                <li\n                    key={idx}\n                    className={`collection-item ${todo.status ? \"\" : \"disabled\"}`}>\n                    <span onClick={onFinishTodo.bind(null, todo.id)}>{todo.text}</span>\n                    <button className=\"btn\" onClick={onDeleteTodo.bind(null, todo.id)}>\n                        <i className=\"material-icons\">delete</i>\n                    </button>\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nexport default TodoList;\n","import { connect } from 'react-redux'\nimport { finishTodoAction, deleteTodoAction } from '../actions';\nimport TodoList from './TodoList';\n\nconst mapStateToProps = state => ({\n    todos: state.todos\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onFinishTodo: id => dispatch(finishTodoAction(id)),\n    onDeleteTodo: id => dispatch(deleteTodoAction(id))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TodoList);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass ImagesContainer extends Component {\n  constructor({ getImages, images }) {\n    super();\n    if (images.length === 0) getImages();\n  }\n\n  render() {\n    const { images } = this.props;\n    return (\n      <div>\n        <ul className=\"row\">\n          {images.map((image, _idx) => (\n            <li className=\"col s12 m4\" key={_idx}>\n              <div className=\"card\">\n                <div className=\"card-image\">\n                  <img src={image.urls.raw} alt={image.description} />\n                  <span className=\"card-title\">{image.description}</span>\n                </div>\n                <div className=\"card-content\">\n                  <p>{image.alt_description}</p>\n                </div>\n                <div className=\"card-action\">\n                  <a href={image.links.download}>Download</a>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n        <button className=\"btn\" onClick={() => this.props.getImages()}>\n          <i className=\"material-icons\">add</i>\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ images }) => ({ images });\nconst mapDispatchToProps = (dispatch) => ({\n  getImages: () => dispatch({ type: \"IMAGES_SUCCESS\" }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImagesContainer);\n","import React from 'react';\nimport AddTodoContainer from './components/AddTodoContainer';\nimport TodoListContainer from './components/TodoListContainer';\nimport ImagesContainer from './components/ImagesContainer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App container\">\n      <h2 className=\"teal-text\">Things to do:</h2>\n      <AddTodoContainer />\n      <TodoListContainer />\n      <ImagesContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { ADD_TODO, FETCH_TODOS, FINISH_TODO, IMAGES_SUCCESS, FETCH_IMAGES, DELETE_TODO_SAGA } from '../actions';\n\nconst todos = (state = [], action) => {\n    switch (action.type) {\n        case ADD_TODO:\n            return [ ...state, action.payload ]\n        case FINISH_TODO:\n            let index = state.findIndex(todo => todo.id === action.payload);\n            state[ index ].status = !state[ index ].status;\n            return [ ...state ];\n        case DELETE_TODO_SAGA:\n            return state.filter(todo => todo.id !== action.payload)\n        default:\n            return state;\n    }\n};\n\nconst getTodos = (state = [], action) => {\n    switch (action.type) {\n        case FETCH_TODOS:\n            return state;\n        default:\n            return state;\n    }\n}\n\nconst nextPage = (state = 1, action) => {\n    if (action.type === IMAGES_SUCCESS) return state + 1;\n    return state;\n}\n\nconst images = (state = [], action) => {\n    if (action.type === FETCH_IMAGES) return [ ...state, ...action.payload ];\n    return state;\n}\n\nexport default combineReducers({\n    todos,\n    getTodos,\n    nextPage,\n    images\n});\n","const {localStorage} =  window;\n\nexport const loadState = () => {\n    const serializedState = localStorage.getItem(\"store\");\n    try {\n        if (serializedState === null) return undefined;\n        return JSON.parse(serializedState);\n    } catch {\n        return undefined\n    }\n};\n\nexport const saveState = state => {\n    try {\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem(\"store\", serializedState);\n    } catch {\n        throw new Error(\"Could not save state\");\n    }\n};","const API_KEY = \"zQvZFs_IjmQOmWZ7d2gYSfaWTGFXXdgihPLUWhrm6ug\";\n// const SECRET_KEY = \"O5KVNlfJ7PzcoeKj0BDzJNqAQjsiphzEmBMamzToDrQ\";\nconst BASE_URL = \"https://api.unsplash.com/\";\n\nexport default async (page = 1) => {\n    const URL = `${BASE_URL}photos/?page=${page}&per_page=5&client_id=${API_KEY}`\n    const response =  await fetch(URL);\n    if (response.status >= 400) throw new Error(response.errors);\n    return await response.json();\n}\n","import { takeEvery, select, put, call, takeLatest } from 'redux-saga/effects';\nimport { IMAGES_SUCCESS, fetchImagesAction, DELETE_TODO, deleteTodoFromSaga } from '../actions';\nimport fetchImages from '../api';\n\nconst getPage = state => state.nextPage;\n\nfunction* fetchImagesSaga() {\n    try {\n        const page = yield select(getPage);\n        const images = yield call(fetchImages, page);\n        yield put(fetchImagesAction(images))\n    } catch (error) {\n\n    }\n}\n\nfunction* deleteTodoSaga({payload}) {\n    yield put(deleteTodoFromSaga(payload))\n}\n\nfunction* rootSaga() {\n/*  yield takeEvery(ADD_TODO, workerSaga); // non blocking\n    yield take(ADD_TODO); //blocking\n    yield call(workerSaga); */\n\n    yield takeEvery(IMAGES_SUCCESS, fetchImagesSaga);\n    yield takeLatest(DELETE_TODO, deleteTodoSaga);\n}\n\nexport default rootSaga;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootStore from './reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { loadState, saveState } from './localStorage';\nimport { throttle } from 'lodash';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './saga/sagas';\n\nconst localStore = loadState();\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  rootStore,\n  localStore,\n  compose(\n    applyMiddleware(sagaMiddleware),\n    composeWithDevTools())\n);\n\nsagaMiddleware.run(rootSaga);\n\n\nstore.subscribe(throttle(() => saveState(store.getState()), 1000));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}