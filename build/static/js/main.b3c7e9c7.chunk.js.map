{"version":3,"sources":["components/AddTodo.js","components/AddTodoContainer.js","actions/index.js","components/TodoList.js","components/TodoListContainer.js","App.js","reducers/index.js","index.js"],"names":["AddTodo","input","onAddTodo","onSubmit","e","preventDefault","value","type","name","ref","node","connect","dispatch","text","payload","id","Math","round","random","status","TodoList","todos","onFinishTodo","map","todo","idx","key","onClick","bind","state","finishTodoAction","App","className","AddTodoContainer","TodoListContainer","combineReducers","action","console","info","filter","getTodos","store","createStore","rootStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"kNAiBeA,EAfC,SAAC,GAAiB,IAC1BC,EADUC,EAAe,EAAfA,UAEd,OACI,0BAAMC,SAAU,SAACC,GACbA,EAAEC,iBADiB,IAEZC,EAASL,EAATK,MACFA,GACLJ,EAAUI,KAEV,2BAAOC,KAAK,OAAOC,KAAK,UAAUC,IAAK,SAAAC,GAAI,OAAIT,EAAQS,KACvD,4BAAQH,KAAK,UAAb,SCGGI,cACX,MAVuB,SAAAC,GAAQ,MAAK,CACpCV,UAAW,SAAAW,GACP,OAAOD,ECHJ,CACHL,KANgB,WAOhBO,QDC8B,CAC9BC,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBL,OACAM,QAAQ,SAIDR,CAGbX,GEFaoB,EAbE,SAAC,GAAkC,IAAD,IAA/BC,aAA+B,MAAvB,GAAuB,EAAnBC,EAAmB,EAAnBA,aAC5B,OACI,4BACKD,EAAME,KAAI,SAACC,EAAMC,GAAP,OAAe,wBAAIC,IAAKD,EAAKE,QAASL,EAAaM,KAAK,KAAMJ,EAAKT,KAAMS,EAAKX,WCMtFF,eARS,SAAAkB,GAAK,MAAK,CAC9BR,MAAOQ,EAAMR,UAGU,SAAAT,GAAQ,MAAK,CACpCU,aAAc,SAAAP,GAAE,OAAIH,EFEQ,SAAAG,GAC5B,MAAO,CACHR,KAZmB,cAanBO,QAASC,GELgBe,CAAiBf,QAGnCJ,CAGbS,GCFaW,MATf,WACE,OACE,yBAAKC,UAAU,OACb,kBAACC,EAAD,MACA,kBAACC,EAAD,Q,uBCgBSC,4BAAgB,CAC3Bd,MAtBU,WAAyB,IAAxBQ,EAAuB,uDAAf,GAAIO,EAAW,uCAClC,OAAQA,EAAO7B,MACX,IJLgB,WIOZ,OADA8B,QAAQC,KAAK,mBAAU,sBAAuBF,GACxC,GAAN,mBAAYP,GAAZ,CAAmBO,EAAOtB,UAC9B,IJPmB,cIQf,OAAOe,EAAMU,QAAO,SAAAf,GAAI,OAAIA,EAAKT,KAAOqB,EAAOtB,WACnD,QACI,OAAOe,IAefW,SAXa,WAAyB,IAAxBX,EAAuB,uDAAf,GAAIO,EAAW,uCACrC,OAAQA,EAAO7B,MACX,IJfmB,cIiBnB,QACI,OAAOsB,M,OCHbY,EAAQC,sBAAYC,EAPL,CACnBtB,MAAO,CACL,CAAEN,GAAI,EAAGF,KAAM,eAAgBM,QAAQ,GACvC,CAAEJ,GAAI,EAAGF,KAAM,oBAAqBM,QAAQ,KAIGyB,iCAEnDC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,OAEFM,SAASC,eAAe,W","file":"static/js/main.b3c7e9c7.chunk.js","sourcesContent":["import React from 'react';\n\nconst AddTodo = ({onAddTodo}) => {\n    let input;\n    return (\n        <form onSubmit={(e) => {\n            e.preventDefault();\n            const {value} = input;\n            if (!value) return;\n            onAddTodo(value);\n        }}>\n            <input type=\"text\" name=\"newTodo\" ref={node => input = node}/>\n            <button type=\"submit\">Add</button>\n        </form>\n    );\n}\n\nexport default AddTodo;","import { connect } from \"react-redux\";\nimport AddTodo from \"./AddTodo\";\nimport { addTodoAction } from \"../actions\";\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({\n    onAddTodo: text => {\n        return dispatch(addTodoAction({\n        id: Math.round(Math.random() * 100),\n        text,\n        status: false\n    }))}\n});\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(AddTodo);","export const ADD_TODO = \"ADD_TODO\";\nexport const FINISH_TODO = \"FINISH_TODO\";\nexport const FETCH_TODOS = \"FETCH_TODOS\";\n\nexport const addTodoAction = todo => {\n    return {\n        type: ADD_TODO,\n        payload: todo\n    }\n}\n\nexport const finishTodoAction = id => {\n    return {\n        type: FINISH_TODO,\n        payload: id\n    }\n}\n\nexport const fetchTodosAction = todos => {\n    return {\n        type: FETCH_TODOS,\n        payload: todos\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types'\n\nconst TodoList = ({ todos = [], onFinishTodo }) => {\n    return (\n        <ul>\n            {todos.map((todo, idx) => <li key={idx} onClick={onFinishTodo.bind(null, todo.id)}>{todo.text}</li>)}\n        </ul>\n    );\n};\n\nTodoList.propTypes = {\n    todos: PropTypes.array,\n    onFinishTodo: PropTypes.func\n}\n\nexport default TodoList;","import { connect } from 'react-redux'\nimport {finishTodoAction} from '../actions';\nimport TodoList from './TodoList';\n\nconst mapStateToProps = state => ({\n    todos: state.todos\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onFinishTodo: id => dispatch(finishTodoAction(id))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TodoList);\n","import React from 'react';\nimport AddTodoContainer from './components/AddTodoContainer';\nimport TodoListContainer from './components/TodoListContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AddTodoContainer />\n      <TodoListContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { ADD_TODO, FETCH_TODOS, FINISH_TODO } from '../actions';\n\nconst todos = (state = [], action) => {\n    switch (action.type) {\n        case ADD_TODO:\n            console.info('%c ðŸ’© ', 'background: #ffbf27', action);\n            return [ ...state, action.payload ]\n        case FINISH_TODO:\n            return state.filter(todo => todo.id !== action.payload)\n        default:\n            return state;\n    }\n};\n\nconst getTodos = (state = [], action) => {\n    switch (action.type) {\n        case FETCH_TODOS:\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default combineReducers({\n    todos,\n    getTodos\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootStore from './reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst defaultState = {\n  todos: [\n    { id: 1, text: \"do something\", status: true },\n    { id: 2, text: \"do something else\", status: false },\n  ]\n}\n\nconst store = createStore(rootStore, defaultState, composeWithDevTools());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}