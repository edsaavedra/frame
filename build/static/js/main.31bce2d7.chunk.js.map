{"version":3,"sources":["components/AddTodo.js","components/AddTodoContainer.js","actions/index.js","components/TodoList.js","components/TodoListContainer.js","App.js","reducers/index.js","localStorage.js","index.js"],"names":["AddTodo","input","onAddTodo","onSubmit","e","preventDefault","value","type","className","ref","node","connect","dispatch","text","payload","id","Math","round","random","status","TodoList","todos","onFinishTodo","map","todo","idx","key","onClick","bind","state","finishTodoAction","App","AddTodoContainer","TodoListContainer","combineReducers","action","index","findIndex","getTodos","localStorage","window","localStore","serializedState","getItem","JSON","parse","loadState","store","createStore","rootStore","composeWithDevTools","subscribe","throttle","stringify","setItem","Error","saveState","getState","ReactDOM","render","document","getElementById"],"mappings":"kNAiBeA,EAfC,SAAC,GAAiB,IAC1BC,EADUC,EAAe,EAAfA,UAEd,OACI,0BAAMC,SAAU,SAACC,GACbA,EAAEC,iBADiB,IAEZC,EAASL,EAATK,MACFA,GACLJ,EAAUI,KAEV,2BAAOC,KAAK,OAAOC,UAAU,iBAAiBC,IAAK,SAAAC,GAAI,OAAIT,EAAQS,KACnE,4BAAQH,KAAK,SAASC,UAAU,OAAhC,SCCGG,cACX,MAVuB,SAAAC,GAAQ,MAAK,CACpCV,UAAW,SAAAW,GACP,OAAOD,ECDJ,CACHL,KANgB,WAOhBO,QDD8B,CAC9BC,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBL,OACAM,QAAQ,SAIDR,CAGbX,GEKaoB,EAlBE,SAAC,GAAkC,IAAD,IAA/BC,aAA+B,MAAvB,GAAuB,EAAnBC,EAAmB,EAAnBA,aAC5B,OACI,wBAAId,UAAU,cACTa,EAAME,KAAI,SAACC,EAAMC,GAAP,OACP,wBACIC,IAAKD,EACLjB,UAAS,0BAAqBgB,EAAKL,OAAS,GAAK,YACjDQ,QAASL,EAAaM,KAAK,KAAMJ,EAAKT,KAAMS,EAAKX,WCEtDF,eARS,SAAAkB,GAAK,MAAK,CAC9BR,MAAOQ,EAAMR,UAGU,SAAAT,GAAQ,MAAK,CACpCU,aAAc,SAAAP,GAAE,OAAIH,EFEQ,SAAAG,GAC5B,MAAO,CACHR,KAZmB,cAanBO,QAASC,GELgBe,CAAiBf,QAGnCJ,CAGbS,G,MCAaW,MAVf,WACE,OACE,yBAAKvB,UAAU,iBACb,wBAAIA,UAAU,aAAd,iBACA,kBAACwB,EAAD,MACA,kBAACC,EAAD,Q,cCeSC,4BAAgB,CAC3Bb,MAvBU,WAAyB,IAAxBQ,EAAuB,uDAAf,GAAIM,EAAW,uCAClC,OAAQA,EAAO5B,MACX,IJLgB,WIMZ,MAAM,GAAN,mBAAYsB,GAAZ,CAAmBM,EAAOrB,UAC9B,IJNmB,cIOf,IAAIsB,EAAQP,EAAMQ,WAAU,SAAAb,GAAI,OAAIA,EAAKT,KAAOoB,EAAOrB,WAEvD,OADAe,EAAOO,GAAQjB,QAAUU,EAAOO,GAAQjB,OACjC,YAAKU,GAChB,QACI,OAAOA,IAefS,SAXa,WAAyB,IAAxBT,EAAuB,uDAAf,GAAIM,EAAW,uCACrC,OAAQA,EAAO5B,MACX,IJhBmB,cIkBnB,QACI,OAAOsB,M,QCrBZU,EAAiBC,OAAjBD,a,QCWDE,EDTmB,WACrB,IAAMC,EAAkBH,EAAaI,QAAQ,SAC7C,IACI,GAAwB,OAApBD,EAA0B,OAC9B,OAAOE,KAAKC,MAAMH,GACpB,SACE,QCGWI,GACbC,EAAQC,sBAAYC,EAAWR,EAAYS,iCAEjDH,EAAMI,UAAUC,oBAAS,kBDFA,SAAAvB,GACrB,IACI,IAAMa,EAAkBE,KAAKS,UAAUxB,GACvCU,EAAae,QAAQ,QAASZ,GAChC,SACE,MAAM,IAAIa,MAAM,yBCHOC,CAAUT,EAAMU,cAAa,MAE5DC,IAASC,OACP,kBAAC,IAAD,CAAUZ,MAAOA,GACf,kBAAC,EAAD,OAEFa,SAASC,eAAe,W","file":"static/js/main.31bce2d7.chunk.js","sourcesContent":["import React from 'react';\n\nconst AddTodo = ({onAddTodo}) => {\n    let input;\n    return (\n        <form onSubmit={(e) => {\n            e.preventDefault();\n            const {value} = input;\n            if (!value) return;\n            onAddTodo(value);\n        }}>\n            <input type=\"text\" className=\"teal lighten-5\" ref={node => input = node}/>\n            <button type=\"submit\" className=\"btn\">Add</button>\n        </form>\n    );\n}\n\nexport default AddTodo;","import { connect } from \"react-redux\";\nimport AddTodo from \"./AddTodo\";\nimport { addTodoAction } from \"../actions\";\n\nconst mapDispatchToProps = dispatch => ({\n    onAddTodo: text => {\n        return dispatch(addTodoAction({\n        id: Math.round(Math.random() * 100),\n        text,\n        status: true\n    }))}\n});\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(AddTodo);","export const ADD_TODO = \"ADD_TODO\";\nexport const FINISH_TODO = \"FINISH_TODO\";\nexport const FETCH_TODOS = \"FETCH_TODOS\";\n\nexport const addTodoAction = todo => {\n    return {\n        type: ADD_TODO,\n        payload: todo\n    }\n}\n\nexport const finishTodoAction = id => {\n    return {\n        type: FINISH_TODO,\n        payload: id\n    }\n}\n\nexport const fetchTodosAction = todos => {\n    return {\n        type: FETCH_TODOS,\n        payload: todos\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types'\n\nconst TodoList = ({ todos = [], onFinishTodo }) => {\n    return (\n        <ul className=\"collection\">\n            {todos.map((todo, idx) => (\n                <li\n                    key={idx}\n                    className={`collection-item ${todo.status ? \"\" : \"disabled\"}`}\n                    onClick={onFinishTodo.bind(null, todo.id)}>{todo.text}</li>\n            ))}\n        </ul>\n    );\n};\n\nTodoList.propTypes = {\n    todos: PropTypes.array,\n    onFinishTodo: PropTypes.func\n}\n\nexport default TodoList;","import { connect } from 'react-redux'\nimport {finishTodoAction} from '../actions';\nimport TodoList from './TodoList';\n\nconst mapStateToProps = state => ({\n    todos: state.todos\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onFinishTodo: id => dispatch(finishTodoAction(id))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TodoList);\n","import React from 'react';\nimport AddTodoContainer from './components/AddTodoContainer';\nimport TodoListContainer from './components/TodoListContainer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App container\">\n      <h2 className=\"teal-text\">Things to do:</h2>\n      <AddTodoContainer />\n      <TodoListContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { ADD_TODO, FETCH_TODOS, FINISH_TODO } from '../actions';\n\nconst todos = (state = [], action) => {\n    switch (action.type) {\n        case ADD_TODO:\n            return [ ...state, action.payload ]\n        case FINISH_TODO:\n            let index = state.findIndex(todo => todo.id === action.payload);\n            state[ index ].status = !state[ index ].status;\n            return [ ...state ];\n        default:\n            return state;\n    }\n};\n\nconst getTodos = (state = [], action) => {\n    switch (action.type) {\n        case FETCH_TODOS:\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default combineReducers({\n    todos,\n    getTodos\n});","const {localStorage} =  window;\n\nexport const loadState = () => {\n    const serializedState = localStorage.getItem(\"store\");\n    try {\n        if (serializedState === null) return undefined;\n        return JSON.parse(serializedState);\n    } catch {\n        return undefined\n    }\n};\n\nexport const saveState = state => {\n    try {\n        const serializedState = JSON.stringify(state);\n        localStorage.setItem(\"store\", serializedState);\n    } catch {\n        throw new Error(\"Could not save state\");\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootStore from './reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { loadState, saveState } from './localStorage';\nimport { throttle } from 'lodash';\n\nconst localStore = loadState();\nconst store = createStore(rootStore, localStore, composeWithDevTools());\n\nstore.subscribe(throttle(() => saveState(store.getState()), 1000));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}